<domain type="kvm">
  <name>{{ item.name }}</name>
  <metadata xmlns:sushy="http://openstack.org/xmlns/libvirt/sushy">
    <sushy:bios>
      <sushy:attributes>
        <sushy:attribute name="BootMode" value="Uefi"/>
        <sushy:attribute name="EmbeddedSata" value="Raid"/>
        <sushy:attribute name="L2Cache" value="10x256 KB"/>
        <sushy:attribute name="NicBoot1" value="NetworkBoot"/>
        <sushy:attribute name="NumCores" value="{{ item.vcpu }}"/>
        <sushy:attribute name="ProcTurboMode" value="Enabled"/>
        <sushy:attribute name="QuietBoot" value="true"/>
        <sushy:attribute name="SecureBootStatus" value="Enabled"/>
        <sushy:attribute name="SerialNumber" value="QPX12345"/>
        <sushy:attribute name="SysPassword" value=""/>
      </sushy:attributes>
    </sushy:bios>
  </metadata>
  <memory unit="KiB">{{ item.ram }}</memory>
  <currentMemory unit="KiB">{{ item.ram }}</currentMemory>
  <vcpu placement="static">{{ item.vcpu }}</vcpu>
  <os>
    <type arch="x86_64" machine="pc-q35-rhel9.2.0">hvm</type>
    <loader readonly="yes" type="pflash">/usr/share/OVMF/OVMF_CODE.secboot.fd</loader>
    <nvram template="/usr/share/OVMF/OVMF_VARS.fd">/var/lib/libvirt/qemu/nvram/ocp_master_0.fd</nvram>
    <bootmenu enable="no"/>
  </os>
  <features>
    <acpi/>
    <apic/>
    <pae/>
  </features>
  <cpu mode="host-passthrough" check="none" migratable="on"/>
  <clock offset="utc"/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
{% if item.root is defined %}
    <disk type="volume" device="disk">
      <driver name="qemu" type="qcow2"/>
      <source pool="{{ guests.rootdisk.pool }}" volume="{{ item.name }}-root.qcow2"/>
      <target dev="vda" bus="virtio"/>
      <serial>{{ range(100000000, 999999999) | random }}</serial>
    </disk>
{% endif %}
{% if item.volumes is defined %}
{% for vol in item.volumes %}
    <disk type="volume" device="disk">
      <driver name="qemu" type="qcow2"/>
      <source pool="{{ vol.pool }}" volume="{{ vol.name }}"/>
      <target dev="{{ vol.target }}" bus="virtio"/>
      <serial>{{ range(100000000, 999999999) | random }}</serial>
    </disk>
{% endfor %}
{% endif %}
{% if item.cloudinit is defined %}
    <disk type="file" device="cdrom">
      <driver name="qemu" type="raw"/>
      <source file="{{ guests.rootdisk.pool_path }}/cloudinit_{{ item.name }}.iso"/>
      <backingStore/>
      <target dev="sdb" bus="sata"/>
      <readonly/>
      <address type="drive" controller="0" bus="0" target="0" unit="1"/>
    </disk>
{% endif %}
    <controller type="scsi" index="0" model="virtio-scsi">
      <address type="pci" domain="0x0000" bus="0x04" slot="0x00" function="0x0"/>
    </controller>
    <controller type="usb" index="0" model="qemu-xhci">
      <address type="pci" domain="0x0000" bus="0x05" slot="0x00" function="0x0"/>
    </controller>
    <controller type="sata" index="0">
      <address type="pci" domain="0x0000" bus="0x00" slot="0x1f" function="0x2"/>
    </controller>
    <controller type="pci" index="0" model="pcie-root"/>
    <controller type="pci" index="1" model="pcie-root-port">
      <model name="pcie-root-port"/>
      <target chassis="1" port="0x10"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x02" function="0x0" multifunction="on"/>
    </controller>
    <controller type="pci" index="2" model="pcie-root-port">
      <model name="pcie-root-port"/>
      <target chassis="2" port="0x11"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x02" function="0x1"/>
    </controller>
    <controller type="pci" index="3" model="pcie-root-port">
      <model name="pcie-root-port"/>
      <target chassis="3" port="0x12"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x02" function="0x2"/>
    </controller>
    <controller type="pci" index="4" model="pcie-root-port">
      <model name="pcie-root-port"/>
      <target chassis="4" port="0x13"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x02" function="0x3"/>
    </controller>
    <controller type="pci" index="5" model="pcie-root-port">
      <model name="pcie-root-port"/>
      <target chassis="5" port="0x14"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x02" function="0x4"/>
    </controller>
    <controller type="pci" index="6" model="pcie-root-port">
      <model name="pcie-root-port"/>
      <target chassis="6" port="0x15"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x02" function="0x5"/>
    </controller>
    <controller type="pci" index="7" model="pcie-root-port">
      <model name="pcie-root-port"/>
      <target chassis="7" port="0x16"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x02" function="0x6"/>
    </controller>
{% for port in item.ports %}
{% if port.network is defined %}
    <interface type="network">
      <source network="{{ port.network }}"/>
      <model type="virtio"/>
    </interface>
{% endif %}
{% if port.bridge is defined %}
    <interface type="bridge">
      <source bridge="{{ port.bridge }}"/>
      <model type="virtio"/>
    </interface>
{% endif %}
{% if port.direct is defined %}
    <interface type="direct">
      <source dev="{{ port.direct }}" mode="bridge"/>
      <model type="virtio"/>
    </interface>
{% endif %}
{% endfor %}
    <serial type="pty">
      <log file="/var/log/libvirt/qemu/{{ item.name }}-serial0.log" append="on"/>
      <target type="isa-serial" port="0">
        <model name="isa-serial"/>
      </target>
    </serial>
    <console type="pty">
      <log file="/var/log/libvirt/qemu/{{ item.name }}-serial0.log" append="on"/>
      <target type="serial" port="0"/>
    </console>
    <input type="mouse" bus="ps2"/>
    <input type="keyboard" bus="ps2"/>
    <graphics type="vnc" port="-1" autoport="yes">
      <listen type="address"/>
    </graphics>
    <audio id="1" type="none"/>
    <video>
      <model type="cirrus" vram="16384" heads="1" primary="yes"/>
      <address type="pci" domain="0x0000" bus="0x00" slot="0x01" function="0x0"/>
    </video>
    <watchdog model="itco" action="reset"/>
    <memballoon model="virtio">
      <address type="pci" domain="0x0000" bus="0x06" slot="0x00" function="0x0"/>
    </memballoon>
  </devices>
</domain>
