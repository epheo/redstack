---

- name: Create directory templates
  file:
    path: /home/stack/templates
    state: directory
    owner: stack
    group: stack
- name: Ensure directory structure exists
  file:
    path: '/home/stack/templates/{{ item.path }}'
    state: directory
  with_filetree: 'roles/director/files/templates/'
  when: item.state == 'directory'
- name: Ensure files are populated from templates
  template:
    src: '{{ item.src }}'
    dest: '/home/stack/templates/{{ item.path }}'
  with_filetree: 'roles/director/files/templates/'
  when: item.state == 'file'
- name: Copy answers
  template:
    src: ../templates/answers.yaml.j2
    dest: /home/stack/answers.yaml
- name: Copy deploy script
  copy:
    src: ../files/deploy.sh
    dest: /home/stack/deploy.sh

- name: Ensure Test directory structure exists
  file:
    path: '/home/stack/tests/{{ item.path }}'
    state: directory
  with_filetree: 'roles/director/files/tests/'
  when: item.state == 'directory'
- name: Ensure Test files are populated from templates
  template:
    src: '{{ item.src }}'
    dest: '/home/stack/tests/{{ item.path }}'
  with_filetree: 'roles/director/files/tests/'
  when: item.state == 'file'

- name: Ensure Nic Config directory structure exists
  file:
    path: '/home/stack/templates/nic-config/'
    state: directory
- name: Ensure Nic Config files are populated from templates
  template:
    src: '{{ item.src }}'
    dest: '/home/stack/templates/nic-config/{{ item.path }}'
  with_filetree: 'roles/director/files/{{ nic_config }}/'
  when: item.state == 'file'

  
- name: Create directory scripts
  file:
    path: /home/stack/scripts
    state: directory
    owner: stack
    group: stack
- name: Ensure scripts directory structure exists
  file:
    path: '/home/stack/scripts/{{ item.path }}'
    state: directory
  with_filetree: 'roles/director/files/scripts/'
  when: item.state == 'directory'
- name: Ensure scripts files are populated from templates
  template:
    src: '{{ item.src }}'
    dest: '/home/stack/scripts/{{ item.path }}'
  with_filetree: 'roles/director/files/scripts/'
  when: item.state == 'file'
- name: Set permission on the script folder
  shell: |
    chmod +x -R ~/scripts/
    chmod +x -R ~/tests/
    chmod +x ~/deploy.sh