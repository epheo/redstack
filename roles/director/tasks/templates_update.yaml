---

# Write python script to process all
# 

- name: TEMPLATES; Copy and jinja2 processing 
  file:
    path: /home/stack/templates
    state: directory
    owner: stack
    group: stack
  tags: [ 'templates' ]
- file:
    path: '/home/stack/templates/{{ item.path }}'
    state: directory
  with_filetree: 'roles/director/files/templates/'
  when: item.state == 'directory'
  tags: [ 'templates' ]
- template:
    src: '{{ item.src }}'
    dest: '/home/stack/templates/{{ item.path }}'
  with_filetree: 'roles/director/files/templates/'
  when: item.state == 'file'
  tags: [ 'templates' ]
- template:
    src: ../templates/answers.yaml.j2
    dest: /home/stack/answers.yaml
  tags: [ 'templates' ]
- copy:
    src: ../files/deploy.sh
    dest: /home/stack/deploy.sh
  tags: [ 'templates' ]

- name: Nic-Config; Copy 
  file:
    path: '/home/stack/templates/nic-config/'
    state: directory
  tags: [ 'templates', 'nic-config' ]
- copy:
    src: '{{ item.src }}'
    dest: "/home/stack/templates/nic-config/{{ item.path }}"
  with_filetree: "roles/director/files/{{ nic_config }}/"
  when: item.state == 'file'
  tags: [ 'templates', 'nic-config' ]

- name: TESTS; Copy and jinja2 processing 
  file:
    path: '/home/stack/tests/{{ item.path }}'
    state: directory
  with_filetree: 'roles/director/files/tests/'
  when: item.state == 'directory'
  tags: [ 'tests' ]
- template:
    src: '{{ item.src }}'
    dest: '/home/stack/tests/{{ item.path }}'
  with_filetree: 'roles/director/files/tests/'
  when: item.state == 'file'
  tags: [ 'tests' ]

- name: SCRIPTS; Copy and jinja2 processing 
  file:
    path: /home/stack/scripts
    state: directory
    owner: stack
    group: stack
  tags: [ 'scripts' ]
- file:
    path: '/home/stack/scripts/{{ item.path }}'
    state: directory
  with_filetree: 'roles/director/files/scripts/'
  when: item.state == 'directory'
  tags: [ 'scripts' ]
- template:
    src: '{{ item.src }}'
    dest: '/home/stack/scripts/{{ item.path }}'
  with_filetree: 'roles/director/files/scripts/'
  when: item.state == 'file'
  tags: [ 'scripts' ]
- shell: |
    chmod +x -R ~/scripts/
    chmod +x -R ~/tests/
    chmod +x ~/stack-create.sh
  ignore_errors: yes
  tags: [ 'scripts', 'tests', 'templates' ]

- name: Generate role file.
  shell: openstack overcloud roles generate Controller Compute > templates/roles_data.yaml
