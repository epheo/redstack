# https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/13/html/advanced_overcloud_customization/sect-enabling_ssltls_on_the_overcloud
---

- name: Create SSL directory
  file:
    path: /home/stack/ssl/newcerts
    state: directory
    owner: stack
    group: stack

- name: Create Template directory
  file:
    path: /home/stack/templates/environments
    state: directory
    owner: stack
    group: stack

- name: Create index and serial files
  shell: |
    if [[ ! -f ~stack/ssl/index.txt ]]; then
      touch /home/stack/ssl/index.txt
      echo '01' > /home/stack/ssl/serial
    fi
  register: command_result
  changed_when: "command_result.stdout != ''"

- name: Creating a Certificate Authority
  become: yes
  shell: |
    if [[ ! -f ~stack/ssl/ca.cert.pem ]]; then
      cd ~stack/ssl
      openssl genrsa -out ca.key.pem 4096
      printf '{{ ssl.countryname }}\n{{ ssl.provincename }}\n{{ ssl.localityname }}\n{{ ssl.orgname }}\n{{ ssl.orgunit }}\n{{ ssl.commonname }}\n{{ ssl.emailaddress }}\n' | sudo openssl req  -key ca.key.pem -new -x509 -days 7300 -extensions v3_ca -out ca.crt.pem
    fi
  register: command_result
  changed_when: "command_result.stdout != ''"

- name: Adding the Certificate Authority to Clients
  become: yes
  shell: |
    cd ~stack/ssl
    cp ca.crt.pem /etc/pki/ca-trust/source/anchors/
    update-ca-trust extract

- name: Creating an SSL/TLS Key
  shell: |
    if [[ ! -f ~stack/ssl/server.key.pem ]]; then
      cd ~stack/ssl
      openssl genrsa -out server.key.pem 2048
    fi
  register: command_result
  changed_when: "command_result.stdout != ''"

- name: Creating an SSL/TLS Certificate Signing Request
  template:
    src: ../templates/openssl.cnf.j2
    dest: /home/stack/ssl/openssl.cnf

- name: Generating certificate signing request
  shell: |
    if [[ ! -f ~stack/ssl/server.csr.pem ]]; then
      cd ~stack/ssl
      printf '{{ ssl.countryname }}\n{{ ssl.provincename }}\n{{ ssl.localityname }}\n{{ ssl.orgname }}\n{{ ssl.orgunit }}\n{{ ssl.commonname }}\n{{ ssl.emailaddress }}\n\n{{ ssl.countryname }}\n' | openssl req -config openssl.cnf -key server.key.pem -new -out server.csr.pem
    fi
  register: command_result
  changed_when: "command_result.stdout != ''"

- name: Creating the SSL/TLS Certificate
  shell: |
    if [[ ! -f ~stack/ssl/server.crt.pem ]]; then
      cd ~stack/ssl
      printf 'y\ny\n' | sudo openssl ca -config openssl.cnf -extensions v3_req -days 3650 -in server.csr.pem -out server.crt.pem -cert ca.crt.pem -keyfile ca.key.pem
    fi
  register: command_result
  changed_when: "command_result.stdout != ''"

- name: Get SSLCertificate value
  shell: cat ~stack/ssl/server.crt.pem |sed -n -e '/BEGIN/,$p'
  register: ssl_crt
  
- name: Get SSLKey value
  shell: cat ~stack/ssl/server.key.pem
  register: ssl_key
  
- name: Get ca.crt.pem value
  shell: cat ~stack/ssl/ca.crt.pem
  register: root_certificate

- name: Get undercloud cacert
  ignore_errors: yes
  shell: cat /etc/pki/ca-trust/source/anchors/cm-local-ca.pem
  register: undercloud_cacert

- name: Copy 60-tls.yaml
  template:
    src: ../templates/60-tls.yaml.j2
    dest: /home/stack/templates/environments/60-tls.yaml

- name: Copy 61-tls_trust_anchor.yaml.j2
  template:
    src: ../templates/61-tls_trust_anchor.yaml.j2
    dest: /home/stack/templates/environments/61-tls_trust_anchor.yaml