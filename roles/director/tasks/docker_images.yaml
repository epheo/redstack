---

- name: Restart network service 
  become: yes
  systemd:
    state: restarted
    daemon_reload: yes
    name: network

- name: Prepare container images
  shell: |
    {% if proxy_url is defined %}
    export http_proxy=http://{{ proxy_url }}
    export https_proxy=http://{{ proxy_url }}
    export no_proxy={{ registry.ip }}
    {% endif %}
    openstack overcloud container image prepare \
    {% if enable_ceph is sameas true %}
      -e /usr/share/openstack-tripleo-heat-templates/environments/ceph-ansible/ceph-ansible.yaml \
    {% endif %}
    {% if enable_nfvi is sameas true %}
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/neutron-sriov.yaml \
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/neutron-ovs-dpdk.yaml \
    {% endif %}
    {% if enable_extra is sameas true %}
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/barbican.yaml \
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/octavia.yaml \
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/manila.yaml \
    {% endif %}
    {% if enable_monitoring is sameas true %}
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/collectd.yaml \
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/fluentd.yaml \
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/sensu-client.yaml \
    {% endif %}
    {% if enable_saf is sameas true %}
      -e /usr/share/openstack-tripleo-heat-templates/environments/metrics-collectd-qdr.yaml \
      -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/collectd.yaml \
    {% endif %}
    {% if enable_ceph is sameas true %}
      --set ceph_namespace={{ ceph.namespace }} \
      --set ceph_image={{ ceph.image }} \
    {% endif %}
      --environment-directory ~stack/templates/environments/ \
      --roles-file /home/stack/templates/roles_data.yaml \
      --namespace={{ registry.namespace }} \
      --push-destination={{ registry.ip }}:{{ registry.port }} \
      --prefix=openstack- \
      --tag-from-label {version}-{release} \
      --output-env-file={{ registry.env }} \
      --output-images-file {{ registry.images }}
    
- name: Upload container images
  shell: |
    openstack overcloud container image upload \
      --config-file {{ registry.images }} \
      --verbose

- name: Validate uploaded images
  delegate_to: localhost
  shell: |
    export REPO_URL={{ registry.ip }}:{{ registry.port }}
    curl -s -X GET http://$REPO_URL/v2/_catalog  | jq '.repositories[]' |sort |xargs -I _  curl -s -X GET http://$REPO_URL/v2/_/tags/list
  register: shell_result

- debug:
    var: shell_result.stdout_lines

