---

- name: Create Inventory 
  uri:
    url: "https://localhost/api/v2/inventories/"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: POST
    body_format: json
    body: 
      {
        "organization": "{{ org_id }}",
        "name": "{{ cloud.customer_name }}_inventory",
        "variables" : ""
      }
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 201, 400 ]
  register: res
  changed_when: res.status == 201
- uri:
    url: "https://localhost/api/v2/inventories/?name={{ cloud.customer_name }}_inventory"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: GET
    body_format: json
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 200 ]
  register: inventory_res
- set_fact:
    inventory_id: "{{ inventory_res.json.results[0].id }}"


- name: Create Groups 
  uri:
    url: "https://localhost/api/v2/groups/"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: POST
    body_format: json
    body: 
      {
        "name": "{{ item.group }}",
        "inventory": "{{ inventory_id }}",
        "variables": ""
      }
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 201, 400 ]
  register: res
  changed_when: res.status == 201
  with_items: "{{ inventory_hosts }}"

- uri:
    url: "https://localhost/api/v2/groups/"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: GET
    body_format: json
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 200 ]
  register: group_res


- name: Create Hosts 
  uri:
    url: "https://localhost/api/v2/groups/{{ group_res.json.results | selectattr('name', 'equalto', item.group) | map(attribute='id') | list | max }}/hosts/"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: POST
    body_format: json
    body: 
      {
        "name": "{{ item.name }}",
        "description": "",
        "enabled": "yes",
        "inventory": "{{ inventory_id }}",
        "variables": "{{ item.variables | to_json }}"
      }
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 201, 400 ]
  register: res
  changed_when: res.status == 201
  loop: "{{ inventory_hosts }}"

