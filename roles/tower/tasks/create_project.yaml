---

- name: Create Tower organisation
  uri:
    url: "https://localhost/api/v2/organizations/"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: POST
    body_format: json
    body: 
      {
        "description": "{{ cloud.customer_name }} organisation",
        "name": "{{ cloud.customer_name }}"
      }
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 201, 400 ]
  register: org_res
  changed_when: org_res.status == 201
- uri:
    url: "https://localhost/api/v2/organizations/?name={{ cloud.customer_name }}"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: GET
    body_format: json
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 200 ]
  register: org_res
- set_fact:
    org_id: "{{ org_res.json.results[0].id }}"


#- name: Create new tower user
#  uri:
#    url: "https://localhost/api/v2/users/"
#    user: "{{ tower.user }}"
#    password: "{{ tower.password }}"
#    method: POST
#    body_format: json
#    body: 
#      {
#        "username": "{{ tower.user }}",
#        "first_name": "a",
#        "last_name": "a",
#        "is_superuser": false,
#        "password": "{{ tower.password }}",
#        "email": "a@a.com"
#      }
#    validate_certs: False
#    force_basic_auth: yes
#    status_code: [ 201, 400 ]
#  when: tower.user is defined

- name: Add tower credential
  uri:
    url: "https://localhost/api/v2/organizations/{{ org_id }}/credentials/"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: POST
    body_format: json
    body: 
      {
        "credential_type": 1,
        "name": "rsa_key",
        "inputs": {
          "ssh_key_data": "{{ lookup('file', '~/.ssh/id_rsa') }}"
        }
      }
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 201, 400 ]
  register: res
  changed_when: res.status == 201
- uri:
    url: "https://localhost/api/v2/credentials/?name=rsa_key"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: GET
    body_format: json
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 200 ]
  register: creds_res
- set_fact:
    creds_id: "{{ creds_res.json.results[0].id }}"

- name: Add tower project
  uri:
    url: "https://localhost/api/v2/projects/"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: POST
    body_format: json
    body: 
      {
        "scm_branch": "master",
        "description": "Red Hat Solutions Deployment Automation",
        "scm_update_on_launch": "yes",
        "scm_type": "git",
        "scm_url": "https://github.com/epheo/redstack.git",
        "organization": "{{ org_id }}",
        "name": "redstack"
      }
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 201, 400 ]
  register: res
  changed_when: res.status == 201
- uri:
    url: "https://localhost/api/v2/projects/?name=redstack"
    user: "{{ tower.user }}"
    password: "{{ tower.password }}"
    method: GET
    body_format: json
    validate_certs: False
    force_basic_auth: yes
    status_code: [ 200 ]
  register: project_res
- set_fact:
    project_id: "{{ project_res.json.results[0].id }}"
