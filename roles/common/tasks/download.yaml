---

- name: Create downloads dir
  file:
    state: directory
    path: Downloads

- name: Download Rhel 8.2 Qcow2 Image
  get_url:
    url: "{{ private_cdn.url }}/rhel-8.2-x86_64-kvm.qcow2"
    dest: Downloads/rhel-8.2.qcow2
    force_basic_auth: yes
    url_username: "{{ private_cdn.username }}"
    url_password: "{{ private_cdn.password }}"
    checksum: "sha1:88a4134f16b2e45e34eec6550bb4cbb2ffcae3f9"

- name: Download Fedora 32 stable
  get_url:
    url: https://download.fedoraproject.org/pub/fedora/linux/releases/32/Cloud/x86_64/images/Fedora-Cloud-Base-32-1.6.x86_64.qcow2
    dest: Downloads/fedora-32.qcow2
    checksum: "sha256:423a4ce32fa32c50c11e3d3ff392db97a762533b81bef9d00599de518a7469c8"

- name: Get Rawhide latest build number,
  shell: curl -L https://ftp.lip6.fr/ftp/pub/linux/distributions/fedora/development/rawhide/Cloud/x86_64/images/ |grep qcow2 |awk -F '"' '{print $8}'
  register: latest_fedora

- name: Download latest Fedora Rawhide
  get_url:
    url: "https://ftp.lip6.fr/ftp/pub/linux/distributions/fedora/development/rawhide/Cloud/x86_64/images/{{ latest_fedora.stdout }}"
    dest: Downloads/fedora-rawhide.qcow2

# OpenShift
# https://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview/

- name: Download OpenShift Client
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz
    dest: Downloads/openshift-client-linux.tar.gz

- name: Download OpenShift Installer
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-install-linux.tar.gz
    dest: Downloads/openshift-install-linux.tar.gz

# Ansible

- name: Download Ansible Tower Setup
  get_url:
    url: https://releases.ansible.com/ansible-tower/setup-bundle/ansible-tower-setup-bundle-latest.el8.tar.gz
    dest: Downloads/ansible-tower-setup-bundle-latest.el8.tar.gz

# --- WIP ---

## Download Rhel8 from CDN 
# Generate CDN Debug Certs
# https://mojo.redhat.com/docs/DOC-1061319
# or
# - name: get certs
#   shell: "ls /etc/pki/entitlement/*  | grep -v '\\-key.pem'"
#   register: certs
# 
# - name: set_fact certs
#   set_fact:
#     cdn_certs: "{{ certs.stdout_lines }}"
# 
# - name: get keys
#   #command: "ls /etc/pki/entitlement/*-key.pem"
#   shell: "ls /etc/pki/entitlement/*  | grep  '\\-key.pem'"
#   register: cdn_keys
# 
# - name: set_fact
#   set_fact:
#     cdn_keys: "{{ cdn_keys.stdout_lines }}"
# 
# 
# - name: ensure the destination directory exists
#   file:
#     path: "{{ image_dest_dir }}"
#     state: directory
#     mode: 0755
# 
# - name: download ISO (might take a while)
#   get_url:
#     url: https://cdn.redhat.com/content/dist/rhel/server/8/8Server/x86_64/iso/{{ image_filename }}
#     client_cert: "{{ cdn_certs[0] }}"
#     client_key: "{{ cdn_keys[0] }}"
#     dest: "{{ image_dest_dir }}/{{ image_filename }}"
#     mode: 0755
#     validate_certs: false